{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger'; // import thunk from 'redux-thunk';\n\nimport rootReducer from './root-reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSagas } from './root-sagas.jsx';\nconst sagasMiddlewares = createSagaMiddleware();\nconst middlewares = [sagasMiddlewares]; //change thunk\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // run sagas\n\nsagasMiddlewares.run(rootSagas);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistStore\n};","map":{"version":3,"sources":["/media/afwani/3D2F2E7121F9CF4F/crwn-clothing/client/src/redux/store.jsx"],"names":["createStore","applyMiddleware","persistStore","logger","rootReducer","createSagaMiddleware","rootSagas","sagasMiddlewares","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,MAAMC,gBAAgB,GAAGF,oBAAoB,EAA7C;AAEA,MAAMG,WAAW,GAAG,CAACD,gBAAD,CAApB,C,CAAuC;;AAEvC,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA0C;AACzCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACA;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB,C,CACP;;AACAD,gBAAgB,CAACO,GAAjB,CAAqBR,SAArB;AAEA,OAAO,MAAMS,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASX,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\n// import thunk from 'redux-thunk';\nimport rootReducer from './root-reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSagas } from './root-sagas.jsx';\n\nconst sagasMiddlewares = createSagaMiddleware();\n\nconst middlewares = [sagasMiddlewares];//change thunk\n\nif(process.env.NODE_ENV === 'development'){\n\tmiddlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n// run sagas\nsagasMiddlewares.run(rootSagas);\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistStore };\n"]},"metadata":{},"sourceType":"module"}