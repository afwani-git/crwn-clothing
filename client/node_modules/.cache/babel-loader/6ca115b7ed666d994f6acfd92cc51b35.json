{"ast":null,"code":"var _jsxFileName = \"/media/afwani/3D2F2E7121F9CF4F/crwn-clothing/client/src/component/sign-in/SignIn.component.jsx\";\nimport React from \"react\";\nimport FormInput from \"../form-input/FormInput.component.jsx\";\nimport CostomButton from \"../custom-button/CustomButton.component.jsx\"; // import { auth,signInWithGoogle } from \"../../firebase.util.js\";\n// redux\n\nimport { connect } from 'react-redux';\nimport { signWithGoogleStart, signWithEmailStart } from '../../redux/user/user.action.jsx';\nimport \"./Signin.style.scss\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async evt => {\n      evt.preventDefault();\n      const signWithEmailStart = this.props.signWithEmailStart;\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      signWithEmailStart(email, password); // try{\t\t\t\n      // \tawait auth.signInWithEmailAndPassword(email,password);\n      // }catch(e){\n      // \tconsole.log(e.message);\n      // }\n\n      this.setState({\n        email: \"\",\n        password: \"\"\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    this.handleChage = this.handleChage.bind(this);\n  }\n\n  handleChage(evt) {\n    const _evt$target = evt.target,\n          name = _evt$target.name,\n          value = _evt$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password;\n    const signWithGoogleStart = this.props.signWithGoogleStart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"I alredy have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"sign-in with email or password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      label: \"email\",\n      value: email,\n      onChange: this.handleChage,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      label: \"password\",\n      value: password,\n      onChange: this.handleChage,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(CostomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"SIGN IN\"), React.createElement(CostomButton, {\n      type: \"button\",\n      onClick: signWithGoogleStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"SIGN IN WITH GOOGLE\"))));\n  }\n\n}\n\nconst mapsDispatchToProps = dispatch => ({\n  signWithGoogleStart: () => dispatch(signWithGoogleStart()),\n  signWithEmailStart: (email, password) => dispatch(signWithEmailStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapsDispatchToProps)(SignIn);","map":{"version":3,"sources":["/media/afwani/3D2F2E7121F9CF4F/crwn-clothing/client/src/component/sign-in/SignIn.component.jsx"],"names":["React","FormInput","CostomButton","connect","signWithGoogleStart","signWithEmailStart","SignIn","Component","constructor","props","handleSubmit","evt","preventDefault","state","email","password","setState","handleChage","bind","target","name","value","render","mapsDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport FormInput from \"../form-input/FormInput.component.jsx\";\nimport CostomButton from \"../custom-button/CustomButton.component.jsx\";\n\n// import { auth,signInWithGoogle } from \"../../firebase.util.js\";\n// redux\nimport { connect } from 'react-redux';\nimport { signWithGoogleStart,signWithEmailStart } from '../../redux/user/user.action.jsx';\n\nimport \"./Signin.style.scss\";\n\nclass SignIn extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\temail:\"\",\n\t\t\tpassword:\"\"\n\t\t}\n\t\tthis.handleChage = this.handleChage.bind(this);\n\t}\n\n\thandleSubmit = async (evt) => {\n\t\tevt.preventDefault();\n\t\tconst { signWithEmailStart } = this.props;\n\t\tconst { email,password } = this.state;\n\n\t\tsignWithEmailStart(email,password);\n\n\n\t\t// try{\t\t\t\n\t\t// \tawait auth.signInWithEmailAndPassword(email,password);\n\t\t// }catch(e){\n\t\t// \tconsole.log(e.message);\n\t\t// }\n\t\tthis.setState({\n\t\t\temail:\"\",\n\t\t\tpassword:\"\"\n\t\t})\n\t}\n\n\thandleChage(evt){\n\t\tconst {name,value} = evt.target;\n\t\tthis.setState({[name]:value});\n\t}\n\trender(){\n\t\tconst {email,password} = this.state;\n\t\tconst { signWithGoogleStart } = this.props;\n\t\treturn (\n\t\t\t<div className=\"sign-in\">\n\t\t\t\t<h2>I alredy have an account</h2>\n\t\t\t\t<span>sign-in with email or password</span>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<FormInput \n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tlabel=\"email\" \n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={this.handleChage} \n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput \n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tlabel=\"password\" \n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={this.handleChage} \n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"button\">\n\t\t\t\t\t\t<CostomButton type=\"submit\">\n\t\t\t\t\t\t\tSIGN IN\n\t\t\t\t\t\t</CostomButton>\n\t\t\t\t\t\t<CostomButton type=\"button\" onClick={signWithGoogleStart} isGoogleSignIn>\n\t\t\t\t\t\t\tSIGN IN WITH GOOGLE\n\t\t\t\t\t\t</CostomButton>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nconst mapsDispatchToProps = dispatch => ({\n\tsignWithGoogleStart:() => dispatch(signWithGoogleStart()),\n\tsignWithEmailStart:(email,password) => dispatch(signWithEmailStart({email,password}))\n})\n\nexport default connect(null,mapsDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}